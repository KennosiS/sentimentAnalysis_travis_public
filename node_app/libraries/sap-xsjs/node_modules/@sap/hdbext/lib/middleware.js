'use strict';

var _ = require('lodash');
var logger = require('./utils/logger').getLogger();
var poolModule = require('./pool');
var connOptions = require('./conn-options');

exports.middleware = function middleware(hanaService, poolOptions) {
  var hanaOptions = _.merge({}, connOptions.getGlobalOptions(), hanaService);
  var pool = poolModule.getPool(hanaOptions, poolOptions);

  return function db(req, res, next) {
    var opt = connOptions.getRequestOptions(req);
    pool.acquire(opt, function (err, client) {
      if (err) {
        err.status = 500;
        return next(err);
      }

      var releaseClient = true;
      client.once('release', function () {
        releaseClient = false;
        delete req.db;
      });

      function cleanup() {
        logger.debug('SAP_HDBEXT MIDDLEWARE: in cleanup');
        req.socket.removeListener('close', cleanup);
        delete req.db;
        if (releaseClient) {
          releaseClient = false;
          pool.release(client);
        }
      }

      res.once('finish', cleanup);
      req.socket.once('close', cleanup);

      req.db = client;
      next();
    });
  };
};
